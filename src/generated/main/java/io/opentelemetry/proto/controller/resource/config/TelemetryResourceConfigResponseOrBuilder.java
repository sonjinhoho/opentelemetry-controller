// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conf.proto

package io.opentelemetry.proto.controller.resource.config;

public interface TelemetryResourceConfigResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opentelemetry.proto.controller.resource.config.TelemetryResourceConfigResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, string&gt; attributes = 1;</code>
   */
  int getAttributesCount();
  /**
   * <code>map&lt;string, string&gt; attributes = 1;</code>
   */
  boolean containsAttributes(
      java.lang.String key);
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAttributes();
  /**
   * <code>map&lt;string, string&gt; attributes = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAttributesMap();
  /**
   * <code>map&lt;string, string&gt; attributes = 1;</code>
   */

  java.lang.String getAttributesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; attributes = 1;</code>
   */

  java.lang.String getAttributesOrThrow(
      java.lang.String key);

  /**
   * <code>.opentelemetry.proto.controller.resource.config.TraceConfig trace = 2;</code>
   * @return Whether the trace field is set.
   */
  boolean hasTrace();
  /**
   * <code>.opentelemetry.proto.controller.resource.config.TraceConfig trace = 2;</code>
   * @return The trace.
   */
  io.opentelemetry.proto.controller.resource.config.TraceConfig getTrace();
  /**
   * <code>.opentelemetry.proto.controller.resource.config.TraceConfig trace = 2;</code>
   */
  io.opentelemetry.proto.controller.resource.config.TraceConfigOrBuilder getTraceOrBuilder();

  /**
   * <code>.opentelemetry.proto.controller.resource.config.MetricConfig metric = 3;</code>
   * @return Whether the metric field is set.
   */
  boolean hasMetric();
  /**
   * <code>.opentelemetry.proto.controller.resource.config.MetricConfig metric = 3;</code>
   * @return The metric.
   */
  io.opentelemetry.proto.controller.resource.config.MetricConfig getMetric();
  /**
   * <code>.opentelemetry.proto.controller.resource.config.MetricConfig metric = 3;</code>
   */
  io.opentelemetry.proto.controller.resource.config.MetricConfigOrBuilder getMetricOrBuilder();
}
