buildscript {
    ext {
        protobufVersion = "3.19.1"
        protobufPluginVersion = "0.8.18"
        grpcVersion = "1.42.1"
    }
}

plugins {
    id "org.springframework.boot" version "2.6.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "com.google.protobuf" version "${protobufPluginVersion}"
    id "idea"

}

group = "io.opentelemetry"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "com.vladmihalcea:hibernate-types-55:2.14.0"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "net.devh:grpc-server-spring-boot-starter:2.13.0.RELEASE"

    implementation "io.opentelemetry:opentelemetry-proto:1.7.1-alpha"

    compileOnly "org.projectlombok:lombok"
    runtimeOnly "com.h2database:h2"
    annotationProcessor "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    useJUnitPlatform()
}

idea {
    module {
        sourceDirs += file("src/generated/main/java")
        sourceDirs += file("src/generated/main/grpc")
        generatedSourceDirs += file("src/generated/main/java")
        generatedSourceDirs += file("src/generated/main/grpc")
    }
}